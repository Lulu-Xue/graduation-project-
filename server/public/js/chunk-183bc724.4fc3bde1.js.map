{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/_parse-int.js","webpack:///./node_modules/core-js/library/modules/es6.parse-int.js","webpack:///./node_modules/core-js/library/modules/_string-trim.js","webpack:///./node_modules/core-js/library/fn/parse-int.js","webpack:///./node_modules/core-js/library/modules/_string-ws.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/parse-int.js","webpack:///./src/views/Visualization/vdog-rs.js"],"names":["$parseInt","__webpack_require__","parseInt","$trim","trim","ws","hex","module","exports","str","radix","string","String","test","$export","G","F","defined","fails","spaces","space","non","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","P","TYPE","replace","initPage","_x","_x2","_x3","_x4","_initPage","apply","this","arguments","_callee","NCBIData","myChart","oldNcList","NCBIValues","ncList","data","schema","itemStyle","option","typeOnLegend","typeOn","i","_i","_i2","regeneratorRuntime","wrap","_context","prev","next","randomList","readDataToMatrix","console","log","switchColumn","cpData","plData","mtData","name","index","text","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","backgroundColor","backColor","color","colorRange","legend","id","top","textStyle","textColor","fontSize","inactiveColor","disableColor","grid","bottom","left","right","toolbox","showTitle","feature","dataZoom","saveAsImage","iconStyle","normal","borderColor","tooltip","padding","borderWidth","formatter","obj","value","seriesName","xAxis","type","nameGap","nameTextStyle","splitLine","show","axisLine","lineStyle","lineColor","scale","yAxis","nameLocation","visualMap","dimension","min","D_graduation_project_node_modules_babel_runtime_corejs2_core_js_parse_int__WEBPACK_IMPORTED_MODULE_1___default","minGene","max","maxGene","itemWidth","itemHeight","calculable","precision","textGap","inRange","symbolSize","outOfRange","controller","minPro","maxPro","colorLightness","categories","symbol","series","markArea","silent","borderType","markLine","valueIndex","setOption","getOption","length","push","dispatchAction","batch","Animals","Fungi","Plants","Protists","Other","abrupt","visualMapIndex","selected","on","params","componentType","seriesType","window","open","join","stop","ncNumbers","re","Array","res","getNCBIValues","line","slice"],"mappings":"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","file":"js/chunk-183bc724.4fc3bde1.js","sourcesContent":["var $parseInt = require('./_global').parseInt;\nvar $trim = require('./_string-trim').trim;\nvar ws = require('./_string-ws');\nvar hex = /^[-+]?0[xX]/;\n\nmodule.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {\n  var string = $trim(String(str), 3);\n  return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));\n} : $parseInt;\n","var $export = require('./_export');\nvar $parseInt = require('./_parse-int');\n// 18.2.5 parseInt(string, radix)\n$export($export.G + $export.F * (parseInt != $parseInt), { parseInt: $parseInt });\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","require('../modules/es6.parse-int');\nmodule.exports = require('../modules/_core').parseInt;\n","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n","module.exports = require(\"core-js/library/fn/parse-int\");","import { getNCBIValues, randomList, switchColumn, colorRange, backColor, lineColor, textColor, disableColor } from \"./ncbi.js\"\n\nexport async function initPage(NCBIData, myChart, oldNcList, NCBIValues) {\n    let ncList = oldNcList;\n    if (!oldNcList) ncList = randomList(NCBIData, 500);\n    let data = readDataToMatrix(NCBIData, ncList, NCBIValues);\n    console.log(data);\n    switchColumn(data.cpData, 7, 0); // GC\n    switchColumn(data.plData, 7, 0);\n    switchColumn(data.mtData, 7, 0);\n\n    switchColumn(data.cpData, 6, 1); // Size\n    switchColumn(data.mtData, 6, 1);\n    switchColumn(data.plData, 6, 1);\n\n    let schema = [\n        { name: 'name', index: 0, text: 'Organism/Name' },\n        { name: 'Group', index: 1, text: 'Group' },\n        { name: 'SubGroup', index: 2, text: 'SubGroup' },\n        { name: 'Type', index: 3, text: 'Type' },\n        { name: 'RefSeq', index: 4, text: 'RefSeq' },\n        { name: 'INSDC', index: 5, text: 'INSDC' },\n        { name: 'Size', index: 6, text: 'Size (Kb)' },\n        { name: 'GC', index: 7, text: 'GC%' },\n        { name: 'Protein', index: 8, text: 'Protein' },\n        { name: 'rRNA', index: 9, text: 'rRNA' },\n        { name: 'tRNA', index: 10, text: 'tRNA' },\n        { name: 'oRNA', index: 11, text: 'Other RNA' },\n        { name: 'Gene', index: 12, text: 'Gene' },\n        { name: 'Pseudogene', index: 13, text: 'Pseudogene' },\n        { name: 'RDate', index: 14, text: 'Release Date' },\n        { name: 'MDate', index: 15, text: 'Modify Date' }\n    ];\n    let itemStyle = {\n        opacity: 0.8,\n        shadowBlur: 10,\n        shadowOffsetX: 0,\n        shadowOffsetY: 0,\n        shadowColor: 'rgba(0, 0, 0, 0.5)'\n    };\n\n    let option = {\n        backgroundColor: backColor,\n        color: colorRange,\n        legend: [{\n            id: 'dataType',\n            top: 0,\n            data: ['mtDNA', 'Plastid DNA', 'cpDNA'],\n            textStyle: {\n                color: textColor,\n                fontSize: 16\n            },\n            inactiveColor: disableColor\n        }],\n        grid: {\n            top: '10%',\n            bottom: '10%',\n            left: 115,\n            right: 130\n        },\n        toolbox: {\n            showTitle: false,\n            feature: {\n                dataZoom: {},\n                saveAsImage: {}\n            },\n            iconStyle: {\n                normal: {\n                    borderColor: textColor,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)',\n                    shadowBlur: 10\n                }\n            }\n        },\n        tooltip: {\n            padding: 10,\n            backgroundColor: '#222',\n            borderColor: '#777',\n            borderWidth: 1,\n            formatter: function (obj) {\n                let value = obj.value;\n                return '<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 18px;padding-bottom: 7px;margin-bottom: 7px\">'\n                    + obj.seriesName + ': ' + value[7]\n                    + '</div>'\n                    + schema[4].text + '：' + value[4] + '<br>'\n                    + schema[1].text + '：' + value[6] + '<br>'\n                    + schema[2].text + '：' + value[2] + '<br>'\n                    + schema[6].text + '：' + value[1] + '<br>'\n                    + schema[7].text + '：' + value[0] + '<br>'\n                    + schema[12].text + '：' + value[12] + '<br>'\n                    + schema[8].text + '：' + value[8] + '<br>';\n            }\n        },\n        xAxis: {\n            type: 'value',\n            name: 'GC%',\n            nameGap: 16,\n            nameTextStyle: {\n                color: textColor,\n                fontSize: 14\n            },\n            splitLine: {\n                show: false\n            },\n            axisLine: {\n                lineStyle: {\n                    color: lineColor\n                }\n            },\n            scale: true\n        },\n        yAxis: {\n            type: 'value',\n            name: 'Size (Kb)',\n            nameLocation: 'end',\n            nameGap: 20,\n            nameTextStyle: {\n                color: textColor,\n                fontSize: 16\n            },\n            axisLine: {\n                lineStyle: {\n                    color: lineColor\n                }\n            },\n            splitLine: {\n                show: false\n            },\n            scale: true\n        },\n        visualMap: [\n            {\n                type: 'continuous',\n                right: 0,\n                top: '10%',\n                dimension: 12,\n                min: parseInt(data.minGene),\n                max: parseInt(data.maxGene),\n                itemWidth: 30,\n                itemHeight: 120,\n                calculable: true,\n                precision: 0,\n                text: ['Size: Genes'],\n                textGap: 30,\n                textStyle: {\n                    color: textColor\n                },\n                inRange: {\n                    symbolSize: [1, 50]\n                },\n                outOfRange: {\n                    symbolSize: [50, 100],\n                    color: ['rgba(255,255,255,.2)']\n                },\n                controller: {\n                    inRange: {\n                        color: ['#dd4444']\n                    },\n                    outOfRange: {\n                        color: [disableColor]\n                    }\n                }\n            }, {\n                type: 'continuous',\n                right: 0,\n                bottom: '5%',\n                dimension: 8,\n                min: parseInt(data.minPro),\n                max: parseInt(data.maxPro),\n                itemWidth: 30,\n                itemHeight: 120,\n                calculable: true,\n                precision: 0,\n                text: ['Darkness:  \\nProteins'],\n                textGap: 30,\n                textStyle: {\n                    color: textColor\n                },\n                inRange: {\n                    colorLightness: [1, 0.5]\n                },\n                outOfRange: {\n                    color: ['rgba(255,255,255,.2)']\n                },\n                controller: {\n                    inRange: {\n                        color: ['#fff']\n                    },\n                    outOfRange: {\n                        color: [disableColor]\n                    }\n                }\n            }, {\n                type: 'piecewise',\n                top: 20,\n                left: 0,\n                dimension: 6,\n                // pieces: [\n                //     { value: 'Animals', label: 'Animals' },\n                //     { value: 'Fungi', label: 'Fungi' },\n                //     { value: 'Plants', label: 'Plants' },\n                //     { value: 'Protists', label: 'Protists' },\n                //     { value: 'Other', label: 'Other' }\n                // ],\n                categories: ['Animals', 'Fungi', 'Plants', 'Protists', 'Other'],\n                textStyle: {\n                    color: textColor\n                },\n                inRange: {\n                },\n                outOfRange: {\n                    color: ['rgba(255,255,255,.05)', 'rgba(255,255,255,.05)', 'rgba(255,255,255,.05)', 'rgba(255,255,255,.05)', 'rgba(255,255,255,.05)']\n                },\n                controller: {\n                    inRange: {\n                        symbol: \"path://M512 976.7424c-256.67072 0-464.7424-208.07168-464.7424-464.73728C47.2576 255.32928 255.32928 47.2576 512 47.2576s464.7424 208.07168 464.7424 464.7424c0 256.67072-208.07168 464.7424-464.7424 464.7424z m225.41312-754.26816c-161.65888 106.2144-264.18176 424.86272-264.18176 424.86272L410.14272 490.54208l-130.11968 101.16096c55.20896 25.28768 134.0672 106.2144 201.09312 212.4288 47.31392-111.26784 193.20832-338.87744 264.18176-359.11168-27.5968-80.9216-11.82208-146.67776-7.8848-222.54592z m0 0\",\n                        color: '#ffffff'\n                    },\n                    outOfRange: {\n                        color: disableColor\n                    }\n                }\n            }\n        ],\n        series: [\n            {\n                name: 'mtDNA',\n                type: 'scatter',\n                itemStyle: itemStyle,\n                data: data.mtData,\n                markArea: {\n                    silent: true,\n                    itemStyle: {\n                        normal: {\n                            color: 'transparent',\n                            borderWidth: 1,\n                            borderType: 'dashed'\n                        }\n                    },\n                    data: [[{\n                        name: 'mtDNA',\n                        xAxis: 'min',\n                        yAxis: 'min'\n                    }, {\n                        xAxis: 'max',\n                        yAxis: 'max'\n                    }]]\n                },\n                markLine: {\n                    silent: true,\n                    lineStyle: {\n                        normal: {\n                            type: 'solid'\n                        }\n                    },\n                    data: [\n                        { type: 'average', name: 'Average', valueIndex: 0 },\n                        { type: 'average', name: 'Average', valueIndex: 1 }\n                    ]\n                }\n            },\n            {\n                name: 'Plastid DNA',\n                type: 'scatter',\n                itemStyle: itemStyle,\n                data: data.plData,\n                markArea: {\n                    silent: true,\n                    itemStyle: {\n                        normal: {\n                            color: 'transparent',\n                            borderWidth: 1,\n                            borderType: 'dashed'\n                        }\n                    },\n                    data: [[{\n                        name: 'Plastid DNA',\n                        xAxis: 'min',\n                        yAxis: 'min'\n                    }, {\n                        xAxis: 'max',\n                        yAxis: 'max'\n                    }]]\n                },\n                markLine: {\n                    silent: true,\n                    lineStyle: {\n                        normal: {\n                            type: 'solid'\n                        }\n                    },\n                    data: [\n                        { type: 'average', name: 'Average', valueIndex: 0 },\n                        { type: 'average', name: 'Average', valueIndex: 1 }\n                    ]\n                }\n            },\n            {\n                name: 'cpDNA',\n                type: 'scatter',\n                itemStyle: itemStyle,\n                data: data.cpData,\n                markArea: {\n                    silent: true,\n                    itemStyle: {\n                        normal: {\n                            color: 'transparent',\n                            borderWidth: 1,\n                            borderType: 'dashed'\n                        }\n                    },\n                    data: [[{\n                        name: 'cpDNA',\n                        xAxis: 'min',\n                        yAxis: 'min'\n                    }, {\n                        xAxis: 'max',\n                        yAxis: 'max'\n                    }]]\n                },\n                markLine: {\n                    silent: true,\n                    lineStyle: {\n                        normal: {\n                            type: 'solid'\n                        }\n                    },\n                    data: [\n                        { type: 'average', name: 'Average', valueIndex: 0 },\n                        { type: 'average', name: 'Average', valueIndex: 1 }\n                    ]\n                }\n            }\n        ]\n    };\n\n    myChart.setOption(option);\n    console.log(myChart.getOption());\n    let typeOnLegend = [];\n    if (data.cpData.length == 0) {\n        typeOnLegend.push({\n            name: 'cpDNA'\n        });\n    }\n    if (data.mtData.length == 0) {\n        typeOnLegend.push({\n            name: 'mtDNA'\n        });\n    }\n    if (data.plData.length == 0) {\n        typeOnLegend.push({\n            name: 'Plastid DNA'\n        });\n    }\n    myChart.dispatchAction({\n        type: 'legendToggleSelect',\n        batch: typeOnLegend\n    });\n\n    let typeOn = {\n        Animals: false,\n        Fungi: false,\n        Plants: false,\n        Protists: false,\n        Other: false\n    };\n    for (let i = 0; i < data.cpData.length; i++) {\n        if (data.cpData[i][6] === \"Animals\") typeOn.Animals = true;\n        if (data.cpData[i][6] === \"Fungi\") typeOn.Fungi = true;\n        if (data.cpData[i][6] === \"Plants\") typeOn.Plants = true;\n        if (data.cpData[i][6] === \"Protists\") typeOn.Protists = true;\n        if (data.cpData[i][6] === \"Other\") typeOn.Other = true;\n        if (typeOn.Animals === true && typeOn.Fungi === true && typeOn.Plants === true && typeOn.Protists === true && typeOn.Other === true) {\n            break;\n        }\n    }\n    for (let i = 0; i < data.mtData.length; i++) {\n        if (data.mtData[i][6] === \"Animals\") typeOn.Animals = true;\n        if (data.mtData[i][6] === \"Fungi\") typeOn.Fungi = true;\n        if (data.mtData[i][6] === \"Plants\") typeOn.Plants = true;\n        if (data.mtData[i][6] === \"Protists\") typeOn.Protists = true;\n        if (data.mtData[i][6] === \"Other\") typeOn.Other = true;\n        if (typeOn.Animals === true && typeOn.Fungi === true && typeOn.Plants === true && typeOn.Protists === true && typeOn.Other === true) {\n            break;\n        }\n    }\n    for (let i = 0; i < data.plData.length; i++) {\n        if (data.plData[i][6] === \"Animals\") typeOn.Animals = true;\n        if (data.plData[i][6] === \"Fungi\") typeOn.Fungi = true;\n        if (data.plData[i][6] === \"Plants\") typeOn.Plants = true;\n        if (data.plData[i][6] === \"Protists\") typeOn.Protists = true;\n        if (data.plData[i][6] === \"Other\") typeOn.Other = true;\n        if (typeOn.Animals === true && typeOn.Fungi === true && typeOn.Plants === true && typeOn.Protists === true && typeOn.Other === true) {\n            break;\n        }\n    }\n    myChart.dispatchAction({\n        type: 'selectDataRange',\n        visualMapIndex: 2,\n        selected: {\n            'Animals': typeOn.Animals,\n            'Fungi': typeOn.Fungi,\n            'Plants': typeOn.Plants,\n            'Protists': typeOn.Protists,\n            'Other': typeOn.Other\n        }\n    });\n\n    myChart.on('click', function (params) {\n        if (params.componentType === 'series') {\n            if (params.seriesType === 'scatter') {\n                // let type;\n                // switch (params.data[3]) {\n                //     case \"mitochondrion\":\n                //         type = \"mtDNA\"; break;\n                //     case \"plastid\":\n                //         type = \"plDNA\"; break;\n                //     case \"chloroplast\":\n                //         type = \"cpDNA\"; break;\n                // }\n                if (params.data[4] != '-') {\n                    window.open(\"http://bio.njfu.edu.cn/CPTree/service/cpdata.php?type=vdog&id=\" + params.data[4]);\n                }\n            }\n        }\n    });\n    if (!oldNcList) return ncList.join(\",\");\n}\n\nfunction readDataToMatrix(NCBIData, ncNumbers, NCBIValues) {\n    let re = new Array();\n\n    re[\"plData\"] = new Array();\n    re[\"mtData\"] = new Array();\n    re[\"cpData\"] = new Array();\n\n    re[\"minGene\"] = 65535;\n    re[\"maxGene\"] = 0;\n    re[\"minPro\"] = 65535;\n    re[\"maxPro\"] = 0;\n\n    let res = NCBIValues ? NCBIValues : getNCBIValues(NCBIData, ncNumbers);\n    for (let i = 0; i < res.length; i++) {\n        let line = res[i].slice();\n        switch (line[3]) {\n            case 'Plastid DNA':\n                re[\"plData\"].push(line); break;\n            case 'mtDNA':\n                re[\"mtData\"].push(line); break;\n            case 'cpDNA':\n                re[\"cpData\"].push(line); break;\n        }\n\n        if (parseInt(line[8]) > re[\"maxPro\"]) re[\"maxPro\"] = line[8];\n        if (parseInt(line[12]) > re[\"maxGene\"]) re[\"maxGene\"] = line[12];\n        if (parseInt(line[8]) < re[\"minPro\"]) re[\"minPro\"] = line[8];\n        if (parseInt(line[12]) < re[\"minGene\"]) re[\"minGene\"] = line[12];\n    }\n\n    return re;\n}"],"sourceRoot":""}