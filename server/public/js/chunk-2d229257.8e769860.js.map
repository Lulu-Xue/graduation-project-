{"version":3,"sources":["webpack:///./src/views/Visualization/vdog-oh.js"],"names":["initPage","_x","_x2","_x3","_x4","_x5","_initPage","apply","this","arguments","_callee","NCBIData","myChart","oldNcList","NCBIValues","router","regeneratorRuntime","wrap","_context","prev","next","Vue","axios","get","then","res","data","itemStyle","normal","opacity","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","schema","name","index","text","option","baseOption","timeline","axisType","orient","autoPlay","inverse","playInterval","left","right","top","bottom","width","height","label","textStyle","color","textColor","emphasis","symbol","lineStyle","lineColor","checkpointStyle","borderColor","borderWidth","controlStyle","showNextBtn","showPrevBtn","backgroundColor","backColor","title","textAlign","fontSize","document","body","scrollWidth","tooltip","padding","formatter","obj","value","grid","xAxis","type","max","min","nameGap","nameLocation","nameTextStyle","splitLine","show","axisLine","axisLabel","yAxis","visualMap","dimension","categories","SubGroup","calculable","precision","inRange","colors","concat","series","animationDurationUpdate","animationEasingUpdate","options","n","length","push","symbolSize","val","setOption","on","params","componentType","seriesType","dataKey","dataValue","split","stop"],"mappings":"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","file":"js/chunk-2d229257.8e769860.js","sourcesContent":["import Vue from \"vue\"\nimport {backColor, lineColor, textColor} from \"./ncbi.js\"\n\n// x subgroup size\n// y sum of gene\n// radius average genome size\nexport async function initPage(NCBIData, myChart, oldNcList, NCBIValues, router) {\n\t// ./genomes_organelles.txt\n\tawait Vue.axios.get('/history.txt').then((res) => {\n\t\t// let NCBIData = res.data;\n\t\t// var data = new Object();\n\t\t// data.SubGroup = removeDuplicated( getColumnByName(NCBIData, \"SubGroup\", \"all\" ).sort().slice(0,-1) );// remove last: \"SubGroup\"\n\t\t// data.timeline = statisticDate( getColumnByName(NCBIData, \"Release Date\", \"all\" ).sort().slice(0,-1) ); // remove last: \"Release Date\"\n\t\t// data.series = statisticTimeline(NCBIData, data.timeline, data.SubGroup);\n\n\t\tvar data = res.data;\n\n\t\tvar itemStyle = {\n\t\t\tnormal: {\n\t\t\t\topacity: 0.8,\n\t\t\t\tshadowBlur: 10,\n\t\t\t\tshadowOffsetX: 0,\n\t\t\t\tshadowOffsetY: 0,\n\t\t\t\tshadowColor: 'rgba(0, 0, 0, 0.5)'\n\t\t\t}\n\t\t};\n\n\t\tvar schema = [\n\t\t\t{ name: 'Genes', index: 0, text: 'SubGroup Size' },  // x\n\t\t\t{ name: 'SumOfGene', index: 1, text: 'Sum of Gene' },  // y\n\t\t\t{ name: 'AverageSize', index: 2, text: 'Average Genome Size (KB)' },  // r\n\t\t\t{ name: 'SubGoup', index: 3, text: 'SubGoupName' }   // color\n\t\t];\n\n\t\tlet option = {\n\t\t\tbaseOption: {\n\t\t\t\ttimeline: {\n\t\t\t\t\taxisType: 'category',\n\t\t\t\t\torient: 'vertical',\n\t\t\t\t\tautoPlay: true,\n\t\t\t\t\tinverse: true,\n\t\t\t\t\tplayInterval: 2000,\n\t\t\t\t\tleft: null,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 20,\n\t\t\t\t\tbottom: 20,\n\t\t\t\t\twidth: 55,\n\t\t\t\t\theight: null,\n\t\t\t\t\tlabel: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\temphasis: {\n\t\t\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\t\t\tcolor: '#fff'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsymbol: 'none',\n\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\tcolor: lineColor\n\t\t\t\t\t},\n\t\t\t\t\tcheckpointStyle: {\n\t\t\t\t\t\tcolor: '#bbb',\n\t\t\t\t\t\tborderColor: '#777',\n\t\t\t\t\t\tborderWidth: 2\n\t\t\t\t\t},\n\t\t\t\t\tcontrolStyle: {\n\t\t\t\t\t\tshowNextBtn: false,\n\t\t\t\t\t\tshowPrevBtn: false,\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tcolor: '#666',\n\t\t\t\t\t\t\tborderColor: '#666'\n\t\t\t\t\t\t},\n\t\t\t\t\t\temphasis: {\n\t\t\t\t\t\t\tcolor: '#aaa',\n\t\t\t\t\t\t\tborderColor: '#aaa'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdata: []\n\t\t\t\t},\n\t\t\t\tbackgroundColor: backColor,\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: data.timeline[0],\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\tright: '10%',\n\t\t\t\t\tbottom: '30%',\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tfontSize: document.body.scrollWidth / 13,\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.7)'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tpadding: 5,\n\t\t\t\t\tbackgroundColor: '#222',\n\t\t\t\t\tborderColor: '#777',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tformatter: function (obj) {\n\t\t\t\t\t\tvar value = obj.value;\n\t\t\t\t\t\treturn schema[3].text + '：' + value[3] + '<br>'\n\t\t\t\t\t\t\t+ schema[1].text + '：' + value[1] + '<br>'\n\t\t\t\t\t\t\t+ schema[0].text + '：' + value[0] + '<br>'\n\t\t\t\t\t\t\t+ schema[2].text + '：' + value[2] + '<br>';\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tleft: 80,\n\t\t\t\t\tright: 100\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: 'log',\n\t\t\t\t\tname: 'Subgroup Size',\n\t\t\t\t\tmax: 2500,\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tnameGap: 25,\n\t\t\t\t\tnameLocation: 'middle',\n\t\t\t\t\tnameTextStyle: {\n\t\t\t\t\t\tcolor: textColor,\n\t\t\t\t\t\tfontSize: 18\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\tcolor: lineColor\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value}'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttype: 'log',\n\t\t\t\t\tname: 'Sum of Genes',\n\t\t\t\t\tmax: 200000,\n\t\t\t\t\tmin: 1,\n\t\t\t\t\tnameTextStyle: {\n\t\t\t\t\t\tcolor: textColor,\n\t\t\t\t\t\tfontSize: 18\n\t\t\t\t\t},\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\tcolor: lineColor\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value}'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvisualMap: [\n\t\t\t\t\t{\n\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\tdimension: 3,\n\t\t\t\t\t\tcategories: data.SubGroup,\n\t\t\t\t\t\tcalculable: true,\n\t\t\t\t\t\tprecision: 0.1,\n\t\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\t\tcolor: textColor\n\t\t\t\t\t\t},\n\t\t\t\t\t\tinRange: {\n\t\t\t\t\t\t\tcolor: (function () {\n\t\t\t\t\t\t\t\tvar colors = ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'];\n\t\t\t\t\t\t\t\treturn colors.concat(colors);\n\t\t\t\t\t\t\t})()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\t\titemStyle: itemStyle,\n\t\t\t\t\t\tdata: data.series[0]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tanimationDurationUpdate: 2000,\n\t\t\t\tanimationEasingUpdate: 'quinticInOut'\n\t\t\t},\n\t\t\toptions: []\n\t\t};\n\n\t\tfor (var n = 0; n < data.timeline.length; n++) {\n\t\t\toption.baseOption.timeline.data.push(data.timeline[n]);\n\t\t\toption.options.push({\n\t\t\t\ttitle: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\t'text': data.timeline[n] + ''\n\t\t\t\t},\n\t\t\t\tseries: {\n\t\t\t\t\tname: data.timeline[n],\n\t\t\t\t\ttype: 'scatter',\n\t\t\t\t\titemStyle: itemStyle,\n\t\t\t\t\tdata: data.series[n],\n\t\t\t\t\tsymbolSize: function (val) {\n\t\t\t\t\t\tif (val[2] > 0)\n\t\t\t\t\t\t\treturn 0.5 * val[2] + 5;\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tmyChart.setOption(option);\n\t\tmyChart.on('click', function (params) {\n\t\t\tif (params.componentType === 'series') {\n\t\t\t\tif (params.seriesType === 'scatter') {\n\t\t\t\t\trouter.push({\n\t\t\t\t\t\tname: \"visualization\",\n\t\t\t\t\t\tparams: {\n\t\t\t\t\t\t\ttype: \"sl\",\n\t\t\t\t\t\t\tdataKey: \"SubGroup\",\n\t\t\t\t\t\t\tdataValue: params.data[3].split(\",\")[0]\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n// function removeDuplicated(arr) {\n//     var hash = {};\n//     var len = arr.length;\n//     var re = [];\n\n//     for (var i = 0; i < len; i++){\n//         if (!hash[arr[i]]){\n//             hash[arr[i]] = true;\n//             re.push(arr[i]);\n//         } \n//     }\n//     return re;\n// }\n\n// function statisticDate(timeline) {\n//     var hash = {};\n//     var len = timeline.length;\n//     var re = [];\n\n//     for (var i = 0; i < len; i++){\n//         var time = timeline[i].slice(0,4);\n//         if ( !hash[ time ] ) {\n//             hash[time] = true;\n//             re.push(time);\n//         } \n//     }\n//     return re;\n// }\n\n// function statisticTimeline(NCBIData, timeline, subgroups) {\n//     var re = new Array();\n//     for (var i=0; i<timeline.length; i++) {\n//         var oneYear = new Array();\n//         for (var j=0; j<subgroups.length; j++) {\n//             var geneValues = getColumnBeforeTime( NCBIData, 12, subgroups[j], timeline[i] ).sort().slice(0,-1); // remove last: column name\n//             var subgroupSize = geneValues.length;\n//             if ( subgroupSize == 0 ) {\n//                 oneYear.push( [1,1,0,subgroups[j],parseInt(timeline[i])] );\n//                 continue;\n//             }\n//             var geneNumber =  sumAll( geneValues );\n\n//             var sizeValues = getColumnBeforeTime( NCBIData, 6, subgroups[j], timeline[i] ).sort().slice(0,-1);\n//             var averageGeneSize = sumAll( sizeValues )/(sizeValues.length);\n\n//             oneYear.push([ subgroupSize, geneNumber, averageGeneSize, subgroups[j], parseInt(timeline[i]) ]);\n//         }\n//         re.push(oneYear);\n//     }\n//     return re;\n// }\n\n// function sumAll(arr) {\n//     var re=0;\n//     for (var i=0;i<arr.length;i++) {\n//         re += parseFloat( arr[i] );\n//     }\n//     return re;\n// }\n\n// function getColumn(NCBIData, columnNumber, subgroupName) {\n//     var lines = NCBIData.split(\"\\n\");\n//     var re = lines[0].split(\"\\t\")[columnNumber] + \",\";\n//     for (var i=1; i<lines.length-1; i++) { // length-1: the last line is empty\n//         if ( lines[i].split(\"\\t\")[2] == subgroupName || subgroupName == 'all') {\n//             if ( lines[i].split(\"\\t\")[columnNumber] == '-' ) continue; // ignore the '-'\n//             re += lines[i].split(\"\\t\")[columnNumber] + \",\";\n//         }\n//     }\n//     return re.substr(0, re.length-1).split(\",\");\n// }\n\n// function getColumnBeforeTime(NCBIData, columnNumber, subgroupName, beforeDate) {\n//     var lines = NCBIData.split(\"\\n\");\n//     var re = lines[0].split(\"\\t\")[columnNumber] + \",\";\n//     for (var i=1; i<lines.length-1; i++) { // length-1: the last line is empty\n//         if ( lines[i].split(\"\\t\")[2] == subgroupName && parseInt(lines[i].split(\"\\t\")[14].slice(0,4))<=beforeDate ) {\n//             if ( lines[i].split(\"\\t\")[columnNumber] == '-' ) continue; // ignore the '-'\n//             re += lines[i].split(\"\\t\")[columnNumber] + \",\";\n//         }\n//     }\n//     return re.substr(0, re.length-1).split(\",\");\n// }"],"sourceRoot":""}