{"version":3,"sources":["webpack:///./src/views/Visualization/vdog-bs-3d.js"],"names":["initPage","_x","_x2","_x3","_x4","_initPage","apply","this","arguments","_callee","NCBIData","myChart","oldNcList","NCBIValues","ncList","header","xData","ncData","option","regeneratorRuntime","wrap","_context","prev","next","randomList","name","index","value","readDataToMatrix","switchColumn","data","tooltip","formatter","obj","toolbox","showTitle","feature","saveAsImage","iconStyle","normal","borderColor","textColor","shadowColor","shadowBlur","visualMap","type","min","max","inRange","color","colorRange","reverse","textStyle","grid3D","boxWidth","boxDepth","light","main","intensity","ambient","viewControl","autoRotate","distance","autoRotateAfterStill","minDistance","maxDistance","xAxis3D","nameTextStyle","axisLine","lineColor","axisLabel","axisPointer","lineStyle","disableColor","yAxis3D","zAxis3D","series","data2Dto3D","shading","label","show","itemStyle","opacity","emphasis","fontSize","setOption","on","params","componentType","seriesType","nc","window","open","abrupt","join","stop","data2D","re","Array","i","length","j","push","ncNumbers","res","getNCBIValues","line","slice"],"mappings":"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","file":"js/chunk-2d0c54ca.6bd9efb9.js","sourcesContent":["import Vue from \"vue\";\nimport { getNCBIValues, randomList, switchColumn, colorRange, backColor, lineColor, textColor, disableColor } from \"./ncbi.js\"\n\nexport async function initPage(NCBIData, myChart, oldNcList, NCBIValues) {\n    let ncList = oldNcList;\n    if (!oldNcList) ncList = randomList(NCBIData, 20);\n    let schema = [\n        { name: 'name', index: 0, value: 'Organism/Name' },\n        { name: 'Group', index: 1, value: 'Group' },\n        { name: 'SubGroup', index: 2, value: 'SubGroup' },\n        { name: 'Type', index: 3, value: 'Type' },\n        { name: 'RefSeq', index: 4, value: 'RefSeq' },\n        { name: 'INSDC', index: 5, value: 'INSDC' },\n        { name: 'Size', index: 6, value: 'Size (Kb)' },\n        { name: 'GC', index: 7, value: 'GC%' },\n        { name: 'Protein', index: 8, value: 'Protein' },\n        { name: 'rRNA', index: 9, value: 'rRNA' },\n        { name: 'tRNA', index: 10, value: 'tRNA' },\n        { name: 'oRNA', index: 11, value: 'Other RNA' },\n        { name: 'Gene', index: 12, value: 'Gene' },\n        { name: 'Pseudogene', index: 13, value: 'Pseudogene' },\n        { name: 'RDate', index: 14, value: 'Release Date' },\n        { name: 'MDate', index: 15, value: 'Modify Date' }\n    ];\n    let header = ['Other RNA', 'rRNA', 'tRNA', 'Protein', 'Gene', 'Pseudogene'];\n    let xData = ncList;\n\n    let ncData = readDataToMatrix(NCBIData, ncList, NCBIValues);\n    switchColumn(ncData.data, 0, 3);\n\n    let option = {\n        tooltip: {\n            formatter: function (obj) {\n                let value = obj.value;\n                return '<div style=\"border-bottom: 1px solid rgba(255,255,255,.3); font-size: 18px;padding-bottom: 7px;margin-bottom: 7px\">'\n                    + xData[value[0]]\n                    + '</div>'\n                    + header[value[1]] + \" : \" + value[2];\n            }\n        },\n        toolbox: {\n            showTitle: false,\n            feature: {\n                saveAsImage: {}\n            },\n            iconStyle: {\n                normal: {\n                    borderColor: textColor,\n                    shadowColor: 'rgba(0, 0, 0, 0.5)',\n                    shadowBlur: 10\n                }\n            }\n        },\n        visualMap: {\n            type: 'continuous',\n            min: ncData.min,\n            max: +ncData.max,\n            inRange: {\n                color: colorRange.reverse()\n            },\n            textStyle: {\n                color: textColor\n            }\n        },\n        grid3D: {\n            boxWidth: 200,\n            boxDepth: 123,\n            light: {\n                main: {\n                    intensity: 1.2\n                },\n                ambient: {\n                    intensity: 0.3\n                }\n            },\n            viewControl: {\n                autoRotate: true,\n                distance: 300,\n                autoRotateAfterStill: 10,\n                minDistance: 150,\n                maxDistance: 400,\n            }\n        },\n        xAxis3D: {\n            type: 'category',\n            data: xData,\n            name: '',\n            nameTextStyle: {\n                color: textColor\n            },\n            axisLine: {\n                color: lineColor\n            },\n            axisLabel: {\n                textStyle: {\n                    color: textColor\n                }\n            },\n            axisPointer: {\n                lineStyle: {\n                    color: disableColor\n                }\n            }\n        },\n        yAxis3D: {\n            type: 'category',\n            data: header,\n            name: '',\n            nameTextStyle: {\n                color: textColor\n            },\n            axisLine: {\n                color: lineColor\n            },\n            axisLabel: {\n                textStyle: {\n                    color: textColor\n                }\n            },\n            axisPointer: {\n                lineStyle: {\n                    color: disableColor\n                }\n            }\n        },\n        zAxis3D: {\n            type: 'value',\n            name: '',\n            nameTextStyle: {\n                color: textColor\n            },\n            axisLine: {\n                color: lineColor\n            },\n            axisLabel: {\n                textStyle: {\n                    color: textColor\n                }\n            },\n            axisPointer: {\n                lineStyle: {\n                    color: disableColor\n                }\n            }\n        },\n        series: [{\n            type: 'bar3D',\n            data: data2Dto3D(ncData.data),\n            shading: 'color',\n            label: {\n                show: false\n            },\n            itemStyle: {\n                opacity: 0.5\n            },\n            emphasis: {\n                label: {\n                    textStyle: {\n                        fontSize: 20,\n                        color: '#dd4444'\n                    }\n                },\n                itemStyle: {\n                    color: '#dd4444'\n                }\n            }\n        }]\n    }\n    myChart.setOption(option);\n    myChart.on('click', function (params) {\n        if (params.componentType === 'series') {\n            if (params.seriesType === 'bar3D') {\n                let nc = ncList[params.data.value[0]];\n                window.open(\"http://bio.njfu.edu.cn/CPTree/service/cpdata.php?type=vdog&id=\" + nc);\n            }\n        }\n    });\n    if (!oldNcList) return ncList.join(\",\");\n}\n\nfunction data2Dto3D(data2D) {\n    var re = new Array();\n    for (var i = 0; i < data2D.length; i++) {\n        for (var j = 0; j < data2D[i].length; j++) {\n            re.push([i, j, data2D[i][j]]);\n        }\n    }\n    return re;\n}\n\nfunction readDataToMatrix(NCBIData, ncNumbers, NCBIValues) {\n    let re = new Array();\n\n    re[\"data\"] = new Array();\n    re[\"max\"] = 0;\n    re[\"min\"] = 65535;\n\n    let res = NCBIValues ? NCBIValues : getNCBIValues(NCBIData, ncNumbers);\n    for (let i = 0; i < res.length; i++) {\n        let line = res[i];\n        re[\"data\"].push(line.slice(8, 14));\n        for (let j = 0; j <= re[\"data\"][i].length; j++) {\n            if (re[\"data\"][i][j] > re[\"max\"]) re[\"max\"] = re[\"data\"][i][j];\n            if (re[\"data\"][i][j] < re[\"min\"]) re[\"min\"] = re[\"data\"][i][j];\n        }\n    }\n    return re;\n}"],"sourceRoot":""}